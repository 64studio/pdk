# Start adding content to the system files
echo "PI-BUILDER: Setting up custom files/settings relating to rpi"

# apt mirrors
# note: this is for the install process only, so we need to remove apt sources list after
# todo: install public key

# link the repo we have created to /pdktmp/repo
tmpdir="pdktmp"
repodir="$tmpdir/repo"
mkdir -p $repodir
mount --bind $deb_mirror $rootfs/$repodir

# todo: remove trusted once public key saving has been added
echo "deb [trusted=yes] file:/$repodir $deb_release main
deb-src [trusted=yes] file:/$repodir $deb_release main" > etc/apt/sources.list

# Boot commands
echo "dwc_otg.lpm_enable=0 console=ttyAMA0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait" > boot/cmdline.txt

# Mounts
# the noatime may be a config option
echo "proc            /proc           proc    defaults,noatime        0       0
/dev/mmcblk0p1  /boot           vfat    defaults        0       0
/dev/mmcblk0p2	/				ext4	defaults,noatime		0		1
" > etc/fstab

# Hostname
echo "${distrib_name}" > etc/hostname
echo "127.0.1.1	${distrib_name}" >> etc/hosts

# Networking
echo "auto lo
iface lo inet loopback
allow-hotplug eth0
iface eth0 inet dhcp
iface eth0 inet6 dhcp
" > etc/network/interfaces

# Modules
# todo: is this needed?
echo "vchiq
snd_bcm2835
" >> etc/modules

# load preseed
touch preseed.conf
if [ -d $pwd/cdd-assets/ ]; then
	if [ -f $pwd/cdd-assets/preseed.conf ]; then
		cp $pwd/cdd-assets/preseed.conf preseed.conf
	fi
fi

# add repo key TODO add this
#LANG=C chroot $rootfs wget $deb_mirror.public.key -O - | apt-key add -

# Third Stage Setup Script (most of the setup process)
echo "#!/bin/bash
export LANGUAGE=en_GB.UTF-8
export LANG=en_GB.UTF-8
export LC_ALL=en_GB.UTF-8
apt-get update
apt-get install debconf-utils locales -y
debconf-set-selections /preseed.conf
rm -f /preseed.conf
echo 'en_GB.UTF-8 UTF-8' > /etc/locale.gen
locale-gen
apt-get install console-common -y
# workaround for aptitude not being installed
apt-get install aptitude -y
# install custom packagez from PDK
aptitude install --without-recommends -q -y -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" ~tcdd
echo \"root:raspberry\" | chpasswd
sed -i -e 's/KERNEL\!=\"eth\*|/KERNEL\!=\"/' /lib/udev/rules.d/75-persistent-net-generator.rules
rm -f /etc/udev/rules.d/70-persistent-net.rules
sed -i 's/^PermitRootLogin without-password/PermitRootLogin no/' /etc/ssh/sshd_config
echo 'HWCLOCKACCESS=no' >> /etc/default/hwclock
echo 'RAMTMP=yes' >> /etc/default/tmpfs
# make /boot/config.txt
if [ ! -f /boot/config.txt ]; then
        touch /boot/config.txt
fi
rm -f third-stage
" > third-stage
chmod +x third-stage
LANG=C chroot $rootfs /third-stage

echo "Running custom setup scripts.."

# mount cdd-assets to distro
if [ -d $pwd/cdd-assets ]; then
	mkdir -p $tmpdir/cdd-assets
	mount --bind $pwd/cdd-assets $rootfs/$tmpdir/cdd-assets
fi

# run setup script if exists
if [ -f $pwd/cdd-setup ]; then
	cp $pwd/cdd-setup $tmpdir/cdd-setup
	chmod +x $tmpdir/cdd-setup
	LANG=C chroot $rootfs /$tmpdir/cdd-setup
	rm -f $tmpdir/cdd-setup
fi

# unmount cdd-assets
if [ -d $pwd/cdd-assets ]; then
	umount $rootfs/$tmpdir/cdd-assets
	rm -rf $tmpdir/cdd-assets
fi



echo "Cleaning up"

# for now lets add this apt repo for super fun good times
echo "deb http://ftp.uk.debian.org/debian jessie main
deb-src http://ftp.uk.debian.org/debian jessie main" > etc/apt/sources.list

# Cleanup Script
echo "#!/bin/bash
update-rc.d ssh remove
apt-get autoclean
apt-get clean
apt-get purge # what does this do?
apt-get update # no need to do this !
service ntp stop
#ps ax | grep ntpd | awk '{print $1}' | xargs kill
rm -r /root/.rpi-firmware > /dev/null 2>&1
rm -f cleanup
" > cleanup
chmod +x cleanup
LANG=C chroot $rootfs /cleanup

# startup script to generate new ssh host keys
rm -f etc/ssh/ssh_host_*
cat << EOF > etc/init.d/ssh_gen_host_keys
#!/bin/sh
### BEGIN INIT INFO
# Provides:          Generates new ssh host keys on first boot
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Generates new ssh host keys on first boot
# Description:       Generates new ssh host keys on first boot
### END INIT INFO
ssh-keygen -f /etc/ssh/ssh_host_rsa_key -t rsa -N ""
ssh-keygen -f /etc/ssh/ssh_host_dsa_key -t dsa -N ""
insserv -r /etc/init.d/ssh_gen_host_keys
service ssh start
update-rc.d ssh defaults
rm -f \$0
EOF
chmod a+x etc/init.d/ssh_gen_host_keys
insserv etc/init.d/ssh_gen_host_keys

# Run Raspi-Config at first login so users can expand storage and such
#echo "#!/bin/bash
#if [ `id -u` -ne 0 ]; then
#  printf \"\nNOTICE: the software on this Raspberry Pi has not been fully configured. Please run 'raspi-config' as root.\n\n\"
#else
#  raspi-config && exit
#fi
#" > etc/profile.d/raspi-config.sh
#chmod +x etc/profile.d/raspi-config.sh

# show the size
echo "SIZE"
df -h | grep $rootp
echo "/SIZE"

# remove repo link
umount $rootfs/$repodir
rm -rf $tmpdir